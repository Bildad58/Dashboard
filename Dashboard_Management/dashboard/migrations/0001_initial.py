# Generated by Django 5.1.1 on 2024-12-11 12:08

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Installed_capacity', models.CharField(max_length=100)),
                ('Energy_generated', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('Size', models.CharField(max_length=100)),
                ('Location', models.CharField(max_length=100)),
                ('Load', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Online', 'Online'), ('Offline', 'Offline')], default='Online', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SystemStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('NORMAL', 'Normal Operation'), ('WARNING', 'Warning'), ('ALARM', 'Alarm')], default='NORMAL', max_length=10)),
                ('message', models.TextField(blank=True, help_text='Detailed status message or description')),
                ('battery_level', models.FloatField(help_text='Battery charge level in percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('solar_output', models.FloatField(help_text='Current solar panel output in kW')),
                ('system_efficiency', models.FloatField(help_text='System efficiency in percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('inverter_temperature', models.FloatField(help_text='Inverter temperature in Celsius')),
            ],
        ),
    ]
